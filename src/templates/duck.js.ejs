import { createReducer, createActions } from 'reduxsauce';
import Immutable from 'seamless-immutable';

/**
 * Action types and Creators
 */
const { Types, Creators } = createActions({
    <%= props.nameLower %>Request: ['<%= props.nameLower %>Id'],
    requestSuccess: ['<%= props.nameLower %>'],
    requestFailure: null
});

export const <%= props.nameCapitalized %>Types = Types;
export default Creators;

/**
 * Initial state
 */
export const INITIAL_STATE = Immutable({
    <%= props.nameLower %>: null,
    error: false,
    loading: false
});

/**
 * Reducer
 */
export const reducer = createReducer(INITIAL_STATE, {
    [Types.REQUEST_SUCCESS]: (state, { <%= props.nameLower %> }) => state.merge({ <%= props.nameLower %>, loading: false }),
    [Types.REQUEST_FAILURE]: (state, {}) => state.merge({ error: true, loading: false }),
});
